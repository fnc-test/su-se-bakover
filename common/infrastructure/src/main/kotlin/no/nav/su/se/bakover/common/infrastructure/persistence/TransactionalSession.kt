package no.nav.su.se.bakover.common.infrastructure.persistence

import kotliquery.Connection
import javax.sql.DataSource

// Inspirert av: https://github.com/seratch/kotliquery/blob/master/src/main/kotlin/kotliquery/TransactionalSession.kt
class TransactionalSession(
    override val connection: Connection,
    override val returnGeneratedKeys: Boolean = false,
    override val autoGeneratedKeys: List<String> = listOf(),
    queryParameterMappers: List<QueryParameterMapper>,
) : Session(
    connection = connection,
    returnGeneratedKeys = returnGeneratedKeys,
    autoGeneratedKeys = autoGeneratedKeys,
    queryParameterMappers = queryParameterMappers,
)

fun sessionOf(
    dataSource: DataSource,
    timedDbMetrics: DbMetrics,
    returnGeneratedKey: Boolean = false,
    queryParameterMappers: List<QueryParameterMapper>,
): Session {
    return timedDbMetrics.timeQuery("getDatabaseConnection") {
        Session(
            connection = Connection(
                underlying = dataSource.connection,
            ),
            returnGeneratedKeys = returnGeneratedKey,
            queryParameterMappers = queryParameterMappers,
        )
    }
}
